#general form of data processing
#taxon<-"athene"
#data<-read.csv(paste0("csvs/",taxon,"TMT.csv"))
taxon<-"Sturnella"
path<-"smallbirds/"
data<-read.xlsx(paste0(path,taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
#data<-read.xlsx(paste0(taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
data$ROBUSTNESS<-(data$WIDTH*data$DEPTH)/data$LENGTH
data$PIT
#general form of data processing
#taxon<-"athene"
#data<-read.csv(paste0("csvs/",taxon,"TMT.csv"))
taxon<-"Corvus"
path<-"smallbirds/"
data<-read.xlsx(paste0(path,taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
#data<-read.xlsx(paste0(taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
data$ROBUSTNESS<-(data$WIDTH*data$DEPTH)/data$LENGTH
data$PIT
data<-data[,-1]
age.fac<-factor(data$AGE,levels=rev(levels(factor(data$AGE))))
table(data$AGE)
MWboot<-array(dim=c(length(levels(age.fac)),4));colnames(MWboot)<-names(data)[-1];rownames(MWboot)<-levels(age.fac)
for (j in 1:4){
groups<-split(data[,j+1],age.fac)
for (i in 1:length(levels(age.fac))) {
x1<-unlist(groups[i]); x2<-unlist(groups[-i])
MWboot[i,j]<-round(wilcox.test(x1,x2)$p.value,4)
}
}
for(i in 1:length(MWboot)) if(MWboot[i]<correction) MWboot[i]<-paste0(MWboot[i],"*")
MWx<-MWboot
for (j in 1:4){
groups<-split(data[,j+1],age.fac)
for (i in 1:length(levels(age.fac))) {
x1<-unlist(groups[i]); x2<-unlist(groups[-i])
MWx[i,j]<-round(wilcox.test(x1,x2)$statistic,4)
}
}
MWresults<-cbind(MWx[,"LENGTH"],MWboot[,"LENGTH"],MWx[,"WIDTH"],MWboot[,"WIDTH"],MWx[,"DEPTH"],MWboot[,"DEPTH"],MWx[,"ROBUSTNESS"],MWboot[,"ROBUSTNESS"]);colnames(MWresults)<-c("Length.U","Length.p","Width.U","Width.p","Depth.U","Depth.p","Robustness.U","Robustness.p")
write.csv(MWresults,paste0(taxon,"MW.csv"))
data<-read.xlsx(paste0(path,taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
#data<-read.xlsx(paste0(taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
data$ROBUSTNESS<-(data$WIDTH*data$DEPTH)/data$LENGTH
data<-subset(data,data$PIT!="AMNH")[,-1]
age.fac<-factor(data$AGE,levels=rev(levels(factor(data$AGE))))
table(data$AGE)
MWboot<-array(dim=c(length(levels(age.fac)),4));colnames(MWboot)<-names(data)[-1];rownames(MWboot)<-levels(age.fac)
for (j in 1:4){
groups<-split(data[,j+1],age.fac)
for (i in 1:length(levels(age.fac))) {
x1<-unlist(groups[i]); x2<-unlist(groups[-i])
MWboot[i,j]<-round(wilcox.test(x1,x2)$p.value,4)
}
}
for(i in 1:length(MWboot)) if(MWboot[i]<correction) MWboot[i]<-paste0(MWboot[i],"*")
MWx<-MWboot
for (j in 1:4){
groups<-split(data[,j+1],age.fac)
for (i in 1:length(levels(age.fac))) {
x1<-unlist(groups[i]); x2<-unlist(groups[-i])
MWx[i,j]<-round(wilcox.test(x1,x2)$statistic,4)
}
}
MWresults<-cbind(MWx[,"LENGTH"],MWboot[,"LENGTH"],MWx[,"WIDTH"],MWboot[,"WIDTH"],MWx[,"DEPTH"],MWboot[,"DEPTH"],MWx[,"ROBUSTNESS"],MWboot[,"ROBUSTNESS"]);colnames(MWresults)<-c("Length.U","Length.p","Width.U","Width.p","Depth.U","Depth.p","Robustness.U","Robustness.p")
write.csv(MWresults,paste0(taxon,"MW.csv"))
#general form of data processing
#taxon<-"athene"
#data<-read.csv(paste0("csvs/",taxon,"TMT.csv"))
taxon<-"Corvus"
path<-"smallbirds/"
data<-read.xlsx(paste0(path,taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
#data<-read.xlsx(paste0(taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
data$ROBUSTNESS<-(data$WIDTH*data$DEPTH)/data$LENGTH
data<-data[,-1]
dataTS<-make.paleoTS(data,agelookup=F)
TSfit4<-lapply(dataTS,fit4models,pool=F)
TSfit4.wt<-rbind(TSfit4$LENGTH$Akaike.wt,TSfit4$WIDTH$Akaike.wt,TSfit4$DEPTH$Akaike.wt,TSfit4$ROBUSTNESS$Akaike.wt);rownames(TSfit4.wt)<-names(TSfit4);colnames(TSfit4.wt)<-rownames(TSfit4$LENGTH)
write.table(TSfit4.wt,paste0(taxon,"TS.csv"),row.names = F)
data<-read.xlsx(paste0(path,taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
#data<-read.xlsx(paste0(taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
data$ROBUSTNESS<-(data$WIDTH*data$DEPTH)/data$LENGTH
data<-subset(data,data$PIT!="AMNH")[,-1]
dataTS<-make.paleoTS(data,agelookup=F)
TSfit4<-lapply(dataTS,fit4models,pool=F)
TSfit4.wt<-rbind(TSfit4$LENGTH$Akaike.wt,TSfit4$WIDTH$Akaike.wt,TSfit4$DEPTH$Akaike.wt,TSfit4$ROBUSTNESS$Akaike.wt);rownames(TSfit4.wt)<-names(TSfit4);colnames(TSfit4.wt)<-rownames(TSfit4$LENGTH)
write.table(TSfit4.wt,paste0(taxon,"TS.csv"),row.names = F)
table(data$AGE)
data<-read.xlsx(paste0(path,taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
#data<-read.xlsx(paste0(taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
data$ROBUSTNESS<-(data$WIDTH*data$DEPTH)/data$LENGTH
data<-data[,-1]
age.fac<-factor(data$AGE,levels=rev(levels(factor(data$AGE))))
table(data$AGE)
dataTS<-make.paleoTS(data,agelookup=F)
TSfit4<-lapply(dataTS,fit4models,pool=F)
TSfit4.wt<-rbind(TSfit4$LENGTH$Akaike.wt,TSfit4$WIDTH$Akaike.wt,TSfit4$DEPTH$Akaike.wt,TSfit4$ROBUSTNESS$Akaike.wt);rownames(TSfit4.wt)<-names(TSfit4);colnames(TSfit4.wt)<-rownames(TSfit4$LENGTH)
write.table(TSfit4.wt,paste0(taxon,"TS.csv"),row.names = F)
write.table(TSfit4.wt,paste0(taxon,"TS-without.csv"),row.names = F)
data<-data[,-1]
age.fac<-factor(data$AGE,levels=rev(levels(factor(data$AGE))))
table(data$AGE)
data<-read.xlsx(paste0(path,taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
#data<-read.xlsx(paste0(taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
data$ROBUSTNESS<-(data$WIDTH*data$DEPTH)/data$LENGTH
data<-data[,-1]
age.fac<-factor(data$AGE,levels=rev(levels(factor(data$AGE))))
table(data$AGE)
#TS models
dataTS<-make.paleoTS(data,agelookup=F)
TSfit4<-lapply(dataTS,fit4models,pool=F)
TSfit4.wt<-rbind(TSfit4$LENGTH$Akaike.wt,TSfit4$WIDTH$Akaike.wt,TSfit4$DEPTH$Akaike.wt,TSfit4$ROBUSTNESS$Akaike.wt);rownames(TSfit4.wt)<-names(TSfit4);colnames(TSfit4.wt)<-rownames(TSfit4$LENGTH)
write.table(TSfit4.wt,paste0(taxon,"TS-with.csv"),row.names = F)
dataTS
source('~/Dropbox/GitHub/RLB/size_glacial/basic_commands.R', echo=TRUE)
#general form of data processing
#taxon<-"athene"
#data<-read.csv(paste0("csvs/",taxon,"TMT.csv"))
taxon<-"Sturnella"
path<-"smallbirds/"
data<-read.xlsx(paste0(path,taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
#data<-read.xlsx(paste0(taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
data$ROBUSTNESS<-(data$WIDTH*data$DEPTH)/data$LENGTH
data<-data[,-1]
age.fac<-factor(data$AGE,levels=rev(levels(factor(data$AGE))))
table(data$AGE)
require(xlsx);require(paleoTS)
#general form of data processing
#taxon<-"athene"
#data<-read.csv(paste0("csvs/",taxon,"TMT.csv"))
taxon<-"Sturnella"
path<-"smallbirds/"
data<-read.xlsx(paste0(path,taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
#data<-read.xlsx(paste0(taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
data$ROBUSTNESS<-(data$WIDTH*data$DEPTH)/data$LENGTH
data<-data[,-1]
age.fac<-factor(data$AGE,levels=rev(levels(factor(data$AGE))))
table(data$AGE)
dataTS<-make.paleoTS(data,agelookup=F)
TSfit4<-lapply(dataTS,fit4models,pool=F)
TSfit4.wt<-rbind(TSfit4$LENGTH$Akaike.wt,TSfit4$WIDTH$Akaike.wt,TSfit4$DEPTH$Akaike.wt,TSfit4$ROBUSTNESS$Akaike.wt);rownames(TSfit4.wt)<-names(TSfit4);colnames(TSfit4.wt)<-rownames(TSfit4$LENGTH)
write.table(TSfit4.wt,paste0(taxon,"TS.csv"),row.names = F)
require(paleoTS);require(xlsx);require(Hotelling)
path<-"Cats/"
taxon<-"Felis_concolor"
meas<-"m1"
data<-read.xlsx(paste0(path,taxon,".xlsx"),sheetName=meas)[,c("Pit","Age","L","W")]
modern<-subset(data,data$Age==0)
fossil<-subset(data,data$Age!=0)
test<-hotelling.test(modern[,c("L","W")],fossil[,c("L","W")])
plot(0,0,xlim=range(data$L),ylim=range(data$W),pch=0,xlab=paste(meas,"length"),ylab=paste(meas,"width"),main=paste(taxon,meas))
points(modern$L,modern$W,pch=1);points(mean(modern$L),mean(modern$W),pch=16)
points(fossil$L,fossil$W,pch=2);points(mean(fossil$L),mean(fossil$W),pch=17)
legend("bottomright",legend=c("modern","modern mean","fossil","fossil mean"),pch=c(1,16,2,17),cex=0.9)
legend("topleft",legend=c(paste("Hotelling T2",capture.output(test)[1]),capture.output(test)[4]),bty="n",cex=0.9)
range(data$L)
plot(0,0,xlim=range(data$L),ylim=range(data$W),pch=0,xlab=paste(meas,"length"),ylab=paste(meas,"width"),main=paste(taxon,meas))
points(modern$L,modern$W,pch=1);points(mean(modern$L),mean(modern$W),pch=16)
points(fossil$L,fossil$W,pch=2);points(mean(fossil$L),mean(fossil$W),pch=17)
legend("bottomright",legend=c("modern","modern mean","fossil","fossil mean"),pch=c(1,16,2,17),cex=0.9)
legend("topleft",legend=c(paste("Hotelling T2",capture.output(test)[1]),capture.output(test)[4]),bty="n",cex=0.9)
meas<-"mc3"
data<-read.xlsx(paste0(path,taxon,".xlsx"),sheetName=meas)[,c("Pit","Age","L","W")]
modern<-subset(data,data$Age==0)
fossil<-subset(data,data$Age!=0)
test<-hotelling.test(modern[,c("L","W")],fossil[,c("L","W")])
plot(0,0,xlim=range(data$L),ylim=range(data$W),pch=0,xlab=paste(meas,"length"),ylab=paste(meas,"width"),main=paste(taxon,meas))
points(modern$L,modern$W,pch=1);points(mean(modern$L),mean(modern$W),pch=16)
points(fossil$L,fossil$W,pch=2);points(mean(fossil$L),mean(fossil$W),pch=17)
legend("bottomright",legend=c("modern","modern mean","fossil","fossil mean"),pch=c(1,16,2,17),cex=0.9)
legend("topleft",legend=c(paste("Hotelling T2",capture.output(test)[1]),capture.output(test)[4]),bty="n",cex=0.9)
meas<-"mc3"
data<-read.xlsx(paste0(path,taxon,".xlsx"),sheetName=meas)[,c("Pit","Age","L","W")]
modern<-subset(data,data$Age==0)
fossil<-subset(data,data$Age!=0)
test<-hotelling.test(modern[,c("L","W")],fossil[,c("L","W")])
plot(0,0,xlim=range(data$L),ylim=range(data$W),pch=0,xlab=paste(meas,"length"),ylab=paste(meas,"width"),main=paste(taxon,meas))
points(modern$L,modern$W,pch=1);points(mean(modern$L),mean(modern$W),pch=16)
points(fossil$L,fossil$W,pch=2);points(mean(fossil$L),mean(fossil$W),pch=17)
legend("bottomright",legend=c("modern","modern mean","fossil","fossil mean"),pch=c(1,16,2,17),cex=0.9)
legend("topleft",legend=c(paste("Hotelling T2",capture.output(test)[1]),capture.output(test)[4]),bty="n",cex=0.9)
meas<-"mt3"
data<-read.xlsx(paste0(path,taxon,".xlsx"),sheetName=meas)[,c("Pit","Age","L","W")]
modern<-subset(data,data$Age==0)
fossil<-subset(data,data$Age!=0)
test<-hotelling.test(modern[,c("L","W")],fossil[,c("L","W")])
plot(0,0,xlim=range(data$L),ylim=range(data$W),pch=0,xlab=paste(meas,"length"),ylab=paste(meas,"width"),main=paste(taxon,meas))
points(modern$L,modern$W,pch=1);points(mean(modern$L),mean(modern$W),pch=16)
points(fossil$L,fossil$W,pch=2);points(mean(fossil$L),mean(fossil$W),pch=17)
legend("bottomright",legend=c("modern","modern mean","fossil","fossil mean"),pch=c(1,16,2,17),cex=0.9)
legend("topleft",legend=c(paste("Hotelling T2",capture.output(test)[1]),capture.output(test)[4]),bty="n",cex=0.9)
taxon<-"Lynx_rufus"
meas<-"m1"
data<-read.xlsx(paste0(path,taxon,".xlsx"),sheetName=meas)[,c("Pit","Age","L","W")]
modern<-subset(data,data$Age==0)
fossil<-subset(data,data$Age!=0)
test<-hotelling.test(modern[,c("L","W")],fossil[,c("L","W")])
plot(0,0,xlim=range(data$L),ylim=range(data$W),pch=0,xlab=paste(meas,"length"),ylab=paste(meas,"width"),main=paste(taxon,meas))
points(modern$L,modern$W,pch=1);points(mean(modern$L),mean(modern$W),pch=16)
points(fossil$L,fossil$W,pch=2);points(mean(fossil$L),mean(fossil$W),pch=17)
legend("bottomright",legend=c("modern","modern mean","fossil","fossil mean"),pch=c(1,16,2,17),cex=0.9)
legend("topleft",legend=c(paste("Hotelling T2",capture.output(test)[1]),capture.output(test)[4]),bty="n",cex=0.9)
legend("bottomright",legend=c("modern","modern mean","fossil","fossil mean"),pch=c(1,16,2,17),cex=0.9,bg="transparent")
plot(0,0,xlim=range(data$L),ylim=range(data$W),pch=0,xlab=paste(meas,"length"),ylab=paste(meas,"width"),main=paste(taxon,meas))
points(modern$L,modern$W,pch=1);points(mean(modern$L),mean(modern$W),pch=16)
points(fossil$L,fossil$W,pch=2);points(mean(fossil$L),mean(fossil$W),pch=17)
legend("bottomright",legend=c("modern","modern mean","fossil","fossil mean"),pch=c(1,16,2,17),cex=0.9,bg="transparent")
legend("topleft",legend=c(paste("Hotelling T2",capture.output(test)[1]),capture.output(test)[4]),bty="n",cex=0.9)
meas<-"mc3"
data<-read.xlsx(paste0(path,taxon,".xlsx"),sheetName=meas)[,c("Pit","Age","L","W")]
modern<-subset(data,data$Age==0)
fossil<-subset(data,data$Age!=0)
test<-hotelling.test(modern[,c("L","W")],fossil[,c("L","W")])
plot(0,0,xlim=range(data$L),ylim=range(data$W),pch=0,xlab=paste(meas,"length"),ylab=paste(meas,"width"),main=paste(taxon,meas))
points(modern$L,modern$W,pch=1);points(mean(modern$L),mean(modern$W),pch=16)
points(fossil$L,fossil$W,pch=2);points(mean(fossil$L),mean(fossil$W),pch=17)
legend("bottomright",legend=c("modern","modern mean","fossil","fossil mean"),pch=c(1,16,2,17),cex=0.9,bg="transparent")
legend("topleft",legend=c(paste("Hotelling T2",capture.output(test)[1]),capture.output(test)[4]),bty="n",cex=0.9)
plot(0,0,xlim=range(data$L),ylim=range(data$W),pch=0,xlab=paste(meas,"length"),ylab=paste(meas,"width"),main=paste(taxon,meas))
points(modern$L,modern$W,pch=1);points(mean(modern$L),mean(modern$W),pch=16)
points(fossil$L,fossil$W,pch=2);points(mean(fossil$L),mean(fossil$W),pch=17)
legend("topright",legend=c("modern","modern mean","fossil","fossil mean"),pch=c(1,16,2,17),cex=0.9,bg="transparent")
legend("topleft",legend=c(paste("Hotelling T2",capture.output(test)[1]),capture.output(test)[4]),bty="n",cex=0.9)
plot(0,0,xlim=range(data$L),ylim=range(data$W),pch=0,xlab=paste(meas,"length"),ylab=paste(meas,"width"),main=paste(taxon,meas))
points(modern$L,modern$W,pch=1);points(mean(modern$L),mean(modern$W),pch=16)
points(fossil$L,fossil$W,pch=2);points(mean(fossil$L),mean(fossil$W),pch=17)
legend("topright",legend=c("modern","modern mean","fossil","fossil mean"),pch=c(1,16,2,17),cex=0.9,bg="transparent")
legend("topleft",legend=c(paste("Hotelling T2",capture.output(test)[1]),capture.output(test)[4]),bty="n",cex=0.9)
meas<-"mt3"
data<-read.xlsx(paste0(path,taxon,".xlsx"),sheetName=meas)[,c("Pit","Age","L","W")]
modern<-subset(data,data$Age==0)
fossil<-subset(data,data$Age!=0)
test<-hotelling.test(modern[,c("L","W")],fossil[,c("L","W")])
plot(0,0,xlim=range(data$L),ylim=range(data$W),pch=0,xlab=paste(meas,"length"),ylab=paste(meas,"width"),main=paste(taxon,meas))
points(modern$L,modern$W,pch=1);points(mean(modern$L),mean(modern$W),pch=16)
points(fossil$L,fossil$W,pch=2);points(mean(fossil$L),mean(fossil$W),pch=17)
legend("topright",legend=c("modern","modern mean","fossil","fossil mean"),pch=c(1,16,2,17),cex=0.9,bg="transparent")
legend("topleft",legend=c(paste("Hotelling T2",capture.output(test)[1]),capture.output(test)[4]),bty="n",cex=0.9)
legend("bottomleft",legend=c(paste("Hotelling T2",capture.output(test)[1]),capture.output(test)[4]),bty="n",cex=0.9)
plot(0,0,xlim=range(data$L),ylim=range(data$W),pch=0,xlab=paste(meas,"length"),ylab=paste(meas,"width"),main=paste(taxon,meas))
points(modern$L,modern$W,pch=1);points(mean(modern$L),mean(modern$W),pch=16)
points(fossil$L,fossil$W,pch=2);points(mean(fossil$L),mean(fossil$W),pch=17)
legend("topright",legend=c("modern","modern mean","fossil","fossil mean"),pch=c(1,16,2,17),cex=0.9,bg="transparent")
legend("bottomleft",legend=c(paste("Hotelling T2",capture.output(test)[1]),capture.output(test)[4]),bty="n",cex=0.9)
#general form of data processing
#taxon<-"athene"
#data<-read.csv(paste0("csvs/",taxon,"TMT.csv"))
taxon<-"Asio"
require(xlsx);require(paleoTS)
path<-"smallbirds/"
data<-read.xlsx(paste0(path,taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
#data<-read.xlsx(paste0(taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
data$ROBUSTNESS<-(data$WIDTH*data$DEPTH)/data$LENGTH
#data<-subset(data,data$PIT!="AMNH")[,-1]
#data<-data[,-1]
age.fac<-factor(data$AGE,levels=rev(levels(factor(data$AGE))))
table(data$AGE)
#basic stats
filename<-paste0(taxon,"_basic.csv")
#TS models
pit.ages<-read.csv("pitages_Fuller2015.csv",stringsAsFactors = F)
dataTS<-make.paleoTS(data,agelookup=F)
dataTS
#TS plots
source("read.paleoTS.R") #for some reason the function is not loading with the package; this is from github
par(mfrow=c(2,2),mar=c(2,3,3,1),oma=c(1,0,2,0)); for (i in 1:4) {
plot.paleoTS(dataTS[[i]],main=tolower(names(dataTS)[i]),ylim=range(data[,i+1]))
points(data[,1],data[,i+1])
}; mtext(paste0(taxon," (without AMNH specimens)"),outer=TRUE,cex=1.5)
dataTS<-make.paleoTS(data,agelookup=F)
#dataTS<-make.paleoTS(data,agelookup=F)
TSfit4<-lapply(dataTS,fit4models,pool=F)
data<-read.xlsx(paste0(path,taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
#data<-read.xlsx(paste0(taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
data$ROBUSTNESS<-(data$WIDTH*data$DEPTH)/data$LENGTH
#data<-subset(data,data$PIT!="AMNH")[,-1]
data<-data[,-1]
#data<-subset(data,data$PIT!="AMNH")[,-1]
#data<-data[,-1]
age.fac<-factor(data$AGE,levels=rev(levels(factor(data$AGE))))
table(data$AGE)
dataTS<-make.paleoTS(data,agelookup=F)
par(mfrow=c(2,2),mar=c(2,3,3,1),oma=c(1,0,2,0)); for (i in 1:4) {
plot.paleoTS(dataTS[[i]],main=tolower(names(dataTS)[i]),ylim=range(data[,i+1]))
points(data[,1],data[,i+1])
}; mtext(paste0(taxon," (without AMNH specimens)"),outer=TRUE,cex=1.5)
par(mfrow=c(2,2),mar=c(2,3,3,1),oma=c(1,0,2,0)); for (i in 1:4) {
plot.paleoTS(dataTS[[i]],main=tolower(names(dataTS)[i]),ylim=range(data[,i+1]))
points(data[,1],data[,i+1])
}; mtext(paste0(taxon," (with AMNH specimens)"),outer=TRUE,cex=1.5)
#general form of data processing
#taxon<-"athene"
#data<-read.csv(paste0("csvs/",taxon,"TMT.csv"))
taxon<-"Athene"
path<-"smallbirds/"
data<-read.xlsx(paste0(path,taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
#data<-read.xlsx(paste0(taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
data$ROBUSTNESS<-(data$WIDTH*data$DEPTH)/data$LENGTH
#data<-subset(data,data$PIT!="AMNH")[,-1]
data<-data[,-1]
age.fac<-factor(data$AGE,levels=rev(levels(factor(data$AGE))))
table(data$AGE)
dataTS<-make.paleoTS(data,agelookup=F)
#TS plots
source("read.paleoTS.R") #for some reason the function is not loading with the package; this is from github
par(mfrow=c(2,2),mar=c(2,3,3,1),oma=c(1,0,2,0)); for (i in 1:4) {
plot.paleoTS(dataTS[[i]],main=tolower(names(dataTS)[i]),ylim=range(data[,i+1]))
points(data[,1],data[,i+1])
}; mtext(paste0(taxon," (with AMNH specimens)"),outer=TRUE,cex=1.5)
#--------------------
#new dates (Fuller et al. 2015)
getwd()
#--------------------
#new dates (Fuller et al. 2015)
pitAgesNew<-read.csv("pitages_Fuller2015.csv")
pitAgesNew
install.packages('Bchron')
#--------------------
#new dates (Fuller et al. 2015)
require(Bchron)
install.packages('mclust')
#--------------------
#new dates (Fuller et al. 2015)
require(Bchron)
install.packages('Bchron')
install.packages('Bchron')
ages1<-Bchron::BchronCalibrate(ages=pitAgesNew$MeanAge, ageSds = pitAgesNew$SD,calCurves = 'intcal13')
ages1<-Bchron::BchronCalibrate(ages=pitAgesNew$MeanAge, ageSds = pitAgesNew$SD,calCurves = rep('intcal13',nrow(pitAgesNew)))
rep('intcal13',nrow(pitAgesNew))
pitAgesNew$MeanAge
pitAgesNew$SD
pitAgesNew<-read.csv("pitages_Fuller2015.csv")
ages1<-Bchron::BchronCalibrate(ages=pitAgesNew$MeanAge, ageSds = pitAgesNew$SD,calCurves = rep('intcal13',nrow(pitAgesNew)))
dim(pitAgesNew)
pitAgesNew<-read.csv("pitages_Fuller2015.csv")[-13,]
ages1<-Bchron::BchronCalibrate(ages=pitAgesNew$MeanAge, ageSds = pitAgesNew$SD,calCurves = rep('intcal13',nrow(pitAgesNew)))
pitAgesNew
pitAgesNew<-read.csv("pitages_Fuller2015.csv")[-12,]
ages1<-Bchron::BchronCalibrate(ages=pitAgesNew$MeanAge, ageSds = pitAgesNew$SD,calCurves = rep('intcal13',nrow(pitAgesNew)))
pitAgesNew<-read.csv("pitages_Fuller2015.csv")[-12,]
pitAgesNew
pitAgesNew<-read.csv("pitages_Fuller2015.csv")[-12:13,]
ages1<-Bchron::BchronCalibrate(ages=pitAgesNew$MeanAge, ageSds = pitAgesNew$SD,calCurves = rep('intcal13',nrow(pitAgesNew)))
pitAgesNew
ages1<-Bchron::BchronCalibrate(ages=pitAgesNew$MeanAge[1,], ageSds = pitAgesNew$SD[1,],calCurves = 'intcal13')
ages1<-Bchron::BchronCalibrate(ages=pitAgesNew$MeanAge[1], ageSds = pitAgesNew$SD[1],calCurves = 'intcal13')
ages1
summary(ages1)
plot(ages1)
for (i in 1:13) {
ages1<-Bchron::BchronCalibrate(ages=pitAgesNew$MeanAge[i], ageSds = pitAgesNew$SD[i],calCurves = 'intcal13')
summary(ages1)}
i
pitAgesNew$MeanAge[i]
pitAges
pitAgesNew
pitAgesNew<-read.csv("pitages_Fuller2015.csv")
for (i in 1:13) {
ages1<-Bchron::BchronCalibrate(ages=pitAgesNew$MeanAge[i], ageSds = pitAgesNew$SD[i],calCurves = 'intcal13')
summary(ages1)}
i
pitAgesNew$MeanAge[i]
pitAgesNew<-read.csv("pitages_Fuller2015.csv")[-c(12,13),]
for (i in 1:13) {
ages1<-Bchron::BchronCalibrate(ages=pitAgesNew$MeanAge[i], ageSds = pitAgesNew$SD[i],calCurves = 'intcal13')
summary(ages1)}
i
ages1<-Bchron::BchronCalibrate(ages=pitAgesNew$MeanAge[i], ageSds = pitAgesNew$SD[i],calCurves = 'intcal13')
pitAgesNew$MeanAge[i]
pitAgesNew<-read.csv("pitages_Fuller2015.csv")[-c(12,13,14),]
for (i in 1:13) {
ages1<-Bchron::BchronCalibrate(ages=pitAgesNew$MeanAge[i], ageSds = pitAgesNew$SD[i],calCurves = 'intcal13')
summary(ages1)}
i
pitAgesNew
for (i in 1:11) {
ages1<-Bchron::BchronCalibrate(ages=pitAgesNew$MeanAge[i], ageSds = pitAgesNew$SD[i],calCurves = 'intcal13')
summary(ages1)}
ages1<-Bchron::BchronCalibrate(ages=pitAgesNew$MeanAge, ageSds = pitAgesNew$SD,calCurves = rep('intcal13',11)
)
summary(ages1)
plot(ages1)
plot(ages1[[9]])
plot(ages1[9])
summary(ages1$Date9)
plot(ages1$Date9)
plot(ages1$Date1)
plot(ages1)
age_samples<-Bchron::sampleAges(ages1)
age_samples
apply(age_samples, 2, quantile, prob=c(0.025,0.975))
ageRanges<-apply(age_samples, 2, quantile, prob=c(0.025,0.975))
str(ageRanges)
rbind(pitAgesNew$PitNo,ageRanges)
pitAgesNew
pitAgesNew<-read.csv("pitages_Fuller2015.csv")[-c(12,13,14),],stringsAsFactors==F
pitAgesNew<-read.csv("pitages_Fuller2015.csv",stringsAsFactors==F)[-c(12,13,14),]
pitAgesNew<-read.csv("pitages_Fuller2015.csv",stringsAsFactors=F)[-c(12,13,14),]
ages1<-Bchron::BchronCalibrate(ages=pitAgesNew$MeanAge, ageSds = pitAgesNew$SD,calCurves = rep('intcal13',11))
age_samples<-Bchron::sampleAges(ages1)
ageRanges<-apply(age_samples, 2, quantile, prob=c(0.025,0.975))
rbind(pitAgesNew$PitNo,ageRanges)
ageRanges<-rbind(pitAgesNew$PitNo,apply(age_samples, 2, quantile, prob=c(0.025,0.5,0.975)))
ageRanges
colnames(ageRanges)<-ageRanges[1,]
ageRanges
ageRanges<-ageRanges[-1,]
ageRanges
ageRanges<-as.numeric(ageRanges)
ageRanges
> ageRanges<-rbind(pitAgesNew$PitNo,apply(age_samples, 2, quantile, prob=c(0.025,0.5,0.975)))
ageRanges<-rbind(pitAgesNew$PitNo,apply(age_samples, 2, quantile, prob=c(0.025,0.5,0.975)))
colnames(ageRanges)<-ageRanges[1,]
ageRanges<-ageRanges[-1,]
ageRanges
ageRanges<-rbind(apply(age_samples, 2, quantile, prob=c(0.025,0.5,0.975)))
colnames(ageRanges)<-pitAgesNew$PitNo
ageRanges
t(ageRanges)
ageRanges<-t(rbind(apply(age_samples, 2, quantile, prob=c(0.025,0.5,0.975))))
rownames(ageRanges)<-pitAgesNew$PitNo
ageRanges
plot(ageRanges[,2])
plot(ageRanges[,2],ylim=range(ageRanges))
points(ageRanges[,1],cex="-")
points(ageRanges[,1],pch="-")
points(ageRanges[,2],pch="-")
plot(ageRanges[,2],ylim=range(ageRanges))
points(ageRanges[,1],pch="-")
points(ageRanges[,3],pch="-")
abline
abline
?abline
??line
?points
segments(ageRanges[,1],ageRanges[,3])
segments(y1=ageRanges[,1],y0=ageRanges[,3])
plot(1:11,ageRanges[,2],ylim=range(ageRanges))
segments(y1=ageRanges[,1],y0=ageRanges[,3])
segments(x0=1:11,y0=ageRanges[,1],y1=ageRanges[,3])
plot(1:11,ageRanges[,2],ylim=range(ageRanges),pch=as.character(rownames(ageRanges)))
plot(1:11,ageRanges[,2],ylim=range(ageRanges))
segments(x0=1:11,y0=ageRanges[,1],y1=ageRanges[,3])
text
?text
ageRanges<-t(rbind(apply(age_samples, 2, quantile, prob=c(0.05,0.5,0.95))))
rownames(ageRanges)<-pitAgesNew$PitNo
plot(1:11,ageRanges[,2],ylim=range(ageRanges))
segments(x0=1:11,y0=ageRanges[,1],y1=ageRanges[,3])
text(x=1:11,y=ageRanges[,2],labels=rownames(ageRanges))
plot(1:11,ageRanges[,2],ylim=range(ageRanges),col="white")
segments(x0=1:11,y0=ageRanges[,1],y1=ageRanges[,3])
text(x=1:11,y=ageRanges[,2],labels=rownames(ageRanges))
segments(x0=1:11,y0=ageRanges[,1],y1=ageRanges[,3])
segments(x0=1:11,y0=ageRanges[,1],y1=ageRanges[,3])
col="white"
plot(1:11,ageRanges[,2],ylim=range(ageRanges),col="white")
segments(x0=1:11,y0=ageRanges[,1],y1=ageRanges[,3])
points(1:11,ageRanges[,2],ylim=range(ageRanges),col="white")
points(1:11,ageRanges[,2],col="white",pch=21)
points(1:11,ageRanges[,2],col="white",pch=20)
text(x=1:11,y=ageRanges[,2],labels=rownames(ageRanges))
points(1:11,ageRanges[,2],col="white",pch=20,cex=4)
segments(x0=1:11,y0=ageRanges[,1],y1=ageRanges[,3])
plot(1:11,ageRanges[,2],ylim=range(ageRanges),col="white")
segments(x0=1:11,y0=ageRanges[,1],y1=ageRanges[,3])
points(1:11,ageRanges[,2],col="white",pch=20,cex=4)
text(x=1:11,y=ageRanges[,2],labels=rownames(ageRanges))
plot(1:11,ageRanges[,2],ylim=range(ageRanges),col="white",yaxt="Age range",yaxt="")
plot(1:11,ageRanges[,2],ylim=range(ageRanges),col="white",ylab="Age range",xlab="")
segments(x0=1:11,y0=ageRanges[,1],y1=ageRanges[,3])
points(1:11,ageRanges[,2],col="white",pch=20,cex=4)
text(x=1:11,y=ageRanges[,2],labels=rownames(ageRanges))
plot(1:11,ageRanges[,2],ylim=range(ageRanges),col="white",ylab="Age range",xlab="")
segments(x0=1:11,y0=ageRanges[,1],y1=ageRanges[,3])
points(1:11,ageRanges[,2],col="white",pch=20,cex=3)
text(x=1:11,y=ageRanges[,2],labels=rownames(ageRanges))
plot(1:11,ageRanges[,2],ylim=range(ageRanges),col="white",ylab="Age range",xlab="")
segments(x0=1:11,y0=ageRanges[,1],y1=ageRanges[,3])
points(1:11,ageRanges[,2],col="white",pch=20,cex=2)
text(x=1:11,y=ageRanges[,2],labels=rownames(ageRanges),cex=0.8)
plot(1:11,ageRanges[,2],ylim=range(ageRanges),col="white",ylab="Age range",xlab="",xaxt="")
?plot
plot(1:11,ageRanges[,2],ylim=range(ageRanges),col="white",ylab="Age range",xlab="",xaxt="n")
segments(x0=1:11,y0=ageRanges[,1],y1=ageRanges[,3])
points(1:11,ageRanges[,2],col="white",pch=20,cex=2)
text(x=1:11,y=ageRanges[,2],labels=rownames(ageRanges),cex=0.8)
plot(1:11,ageRanges[,2],ylim=rev(range(ageRanges)),col="white",ylab="Age range",xlab="",xaxt="n")
plot(ageRanges[,2],1:11,xlim=rev(range(ageRanges)),col="white",xlab="Age range",yaxt="n")
plot(ageRanges[,2],1:11,xlim=rev(range(ageRanges)),col="white",xlab="Age range",yaxt="n",ylab="")
segments(y0=1:11,x0=ageRanges[,1],x1=ageRanges[,3])
points(ageRanges[,2],1:11,col="white",pch=20,cex=2)
text(y=1:11,x=ageRanges[,2],labels=rownames(ageRanges),cex=0.8)
plot(ageRanges[,2],1:11,xlim=rev(range(ageRanges)),col="white",xlab="Age ranges of pits (95% CI)",yaxt="n",ylab="")
segments(y0=1:11,x0=ageRanges[,1],x1=ageRanges[,3])
points(ageRanges[,2],1:11,col="white",pch=20,cex=2)
text(y=1:11,x=ageRanges[,2],labels=rownames(ageRanges),cex=0.8)
plot(ageRanges[,2],1:11,xlim=rev(range(ageRanges)),col="white",xlab="cal BP",main="Age ranges of pits (95% CI)",yaxt="n",ylab="")
segments(y0=1:11,x0=ageRanges[,1],x1=ageRanges[,3])
points(ageRanges[,2],1:11,col="white",pch=20,cex=2)
text(y=1:11,x=ageRanges[,2],labels=rownames(ageRanges),cex=0.8)
write.csv(ageRanges,"ageRanges_Fuller2015_cal.csv")
ageRanges
ageRanges[,3]-ageRanges[,1]
range(ageRanges[,3]-ageRanges[,1])
plot(ageRanges[,3]-ageRanges[,1])
taxon
#general form of data processing
#taxon<-"athene"
#data<-read.csv(paste0("csvs/",taxon,"TMT.csv"))
taxon<-"Corvus"
path<-"smallbirds/"
data<-read.xlsx(paste0(path,taxon,".xlsx"),1)[,c("PIT","AGE","LENGTH","WIDTH","DEPTH")]
