postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
}
i<-14
length(cleaned[[i]])
j
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
dbGetQuery(con,"select * from coragyps_occidentalis_tarsometatarsus;")
save(cleaned,"2023Paleobio/measurements.Rdata")
save(cleaned,file="2023Paleobio/measurements.Rdata")
measurements[[16]][[1]]
cleaned[[16]][[1]]
cleaned[[16]]<-measurements[[16]]
cleaned[[16]][[1]]
colnames(cleaned[[16]][[1]])
colnames(cleaned[[16]][[1]])<-c("CatNo","Sex","Length","ProxWidth","ProxDepth","MidWidth","MidDepth","DistWidth","DistDepth")
names(cleaned[[16]][[1]])
names(cleaned[[16]])
names(measurements[16])
names(measurements[16][1])
names(measurements[[16]][1])
sheetNames
i<-16
path<-paste("/home/vsyverson/Github/RLB/size_glacial",taxonList$Folder[i],taxonList$Genus[i],taxonList$Filename[i],sep="/")
sheetNames<-getSheetNames(path)
#scripts
source("functions.R")
sheetNames<-getSheetNames(path)
sheetNames
path
i<-15
path<-paste("/home/vsyverson/Github/RLB/size_glacial",taxonList$Folder[i],taxonList$Genus[i],taxonList$Filename[i],sep="/")
sheetNames<-getSheetNames(path)
path
measurements[[15]]
cleaned[[16]][[1]]
colnames(cleaned[[16]][[2]])
colnames(cleaned[[16]][[3]])
colnames(cleaned[[16]][[4]])
colnames(cleaned[[16]][[5]])
colnames(cleaned[[16]][[6]])
colnames(cleaned[[16]][[7]])
colnames(cleaned[[16]][[8]])
colnames(cleaned[[16]][[1:7]])
colnames(cleaned[[16]][[1]])<-c("CatNo","Sex","Length","ProxWidth","ProxDepth","MidWidth","MidDepth","DistWidth","DistDepth")
colnames(cleaned[[16]][[2]])<-c("CatNo","Sex","Length","ProxWidth","ProxDepth","MidWidth","MidDepth","DistWidth","DistDepth")
colnames(cleaned[[16]][[3]])<-c("CatNo","Sex","Length","ProxWidth","ProxDepth","MidWidth","MidDepth","DistWidth","DistDepth")
colnames(cleaned[[16]][[4]])<-c("CatNo","Sex","Length","ProxWidth","ProxDepth","MidWidth","MidDepth","DistWidth","DistDepth")
colnames(cleaned[[16]][[5]])<-c("CatNo","Sex","Length","ProxWidth","ProxDepth","MidWidth","MidDepth","DistWidth","DistDepth")
colnames(cleaned[[16]][[6]])<-c("CatNo","Sex","Length","ProxWidth","ProxDepth","MidWidth","MidDepth","DistWidth","DistDepth")
colnames(cleaned[[16]][[7]])<-c("CatNo","Sex","Length","ProxWidth","ProxDepth","MidWidth","MidDepth","DistWidth","DistDepth")
colnames(cleaned[[15]][[8]])
colnames(cleaned[[15]][[9]])
colnames(cleaned[[15]][[1]])
colnames(cleaned[[16]][[8]])
colnames(cleaned[[16]][[8]])[1]<-"CatNo"
colnames(cleaned[[16]][[8]])[3:15]
colnames(cleaned[[16]][[8]])[3:15]<-colnames(cleaned[[15]][[1]])[3:15]
#now the individual measurements
allcolnames<-vector()
for (i in 1:length(cleaned)) {
allcolnames<-append(allcolnames,unlist(lapply(cleaned[[i]],colnames)))
}
typeLookup<-data.frame(Name=unique(allcolnames),Type=NA)
typeLookup[c(1,2,3,12),2]<-"varchar(100)"
typeLookup[-c(1,2,3,12),2]<-"numeric(100)"
tablenames<-vector()
for (i in 1:length(cleaned)){
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
}
PostgreSQL(max.con = 16,fetch.default.rec = 500,force.reload = FALSE)
driver<-dbDriver("PostgreSQL");con<-dbConnect(driver,user="vsyverson",password="gymnogyps",dbname="rlb")
test<-fetch(dbSendQuery(con,"select * from helloworld;"))
test;rm(test)
for (i in 1:length(cleaned)){
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
}
i
j
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
#dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
gsub("\\.", "", colnames(cleaned[[15]][[1]])[3:15])
gsub("\\_", "", colnames(cleaned[[15]][[1]])[3:15])
gsub("\\.", "_", colnames(cleaned[[15]][[1]])[3:15])
colnames(cleaned[[16]][[8]])[3:15]<-colnames(cleaned[[15]][[1]])[3:15]<-gsub("\\.", "_", colnames(cleaned[[15]][[1]])[3:15])
for (i in 1:length(cleaned)){
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
#dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
}
for (i in 1:length(cleaned)){
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
}
#now the individual measurements
allcolnames<-vector()
for (i in 1:length(cleaned)) {
allcolnames<-append(allcolnames,unlist(lapply(cleaned[[i]],colnames)))
}
typeLookup<-data.frame(Name=unique(allcolnames),Type=NA)
typeLookup[c(1,2,3,12),2]<-"varchar(100)"
typeLookup[-c(1,2,3,12),2]<-"numeric(100)"
tablenames<-vector()
for (i in 1:length(cleaned)){
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
}
i
j
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
#dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
for (i in 1:length(cleaned)){
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
}
i
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
#dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
dbSendQuery(con,"drop table gymnogyps_amplus_cranium;")
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
#dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
for (i in 1:length(cleaned)){
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
}
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
#dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
for (i in 1:length(cleaned)){
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
}
i
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
#dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
for (i in 1:length(cleaned)){
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
}
i
for (i in 18:length(cleaned)){
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
#dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
}
save(cleaned,"2023Paleobio/measurements.RData")
save(cleaned,"/home/vsyverson/Github/RLB/size_glacial/2023Paleobio/measurements.RData")
save(cleaned,file="/home/vsyverson/Github/RLB/size_glacial/2023Paleobio/measurements.RData")
for (j in 1:length(cleaned[[16]])){cleaned[[16]][[j]]$Pit<-"modern"}
i
i<-16
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
save(cleaned,file="/home/vsyverson/Github/RLB/size_glacial/2023Paleobio/measurements.RData")
head(cleaned[[16]][[1]])
save(cleaned,file="/home/vsyverson/Github/RLB/size_glacial/2023Paleobio/measurements.RData")
cleaned[[16]][[2]]
save(cleaned,file="/home/vsyverson/Github/RLB/size_glacial/2023Paleobio/measurements.RData")
load("~/Github/RLB/size_glacial/2023Paleobio/measurements.RData")
cleaned<-meas
#now the individual measurements
allcolnames<-vector()
for (i in 1:length(cleaned)) {
allcolnames<-append(allcolnames,unlist(lapply(cleaned[[i]],colnames)))
}
typeLookup<-data.frame(Name=unique(allcolnames),Type=NA)
typeLookup[c(1,2,3,12),2]<-"varchar(100)"
typeLookup[-c(1,2,3,12),2]<-"numeric(100)"
tablenames<-vector()
for (i in 1:length(cleaned)){
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
}
i
colnames(cleaned[[16]][[8]])[3:15]<-colnames(cleaned[[15]][[1]])[3:15]<-gsub("\\.", "_", colnames(cleaned[[15]][[1]])[3:15])
for (i in 1:length(cleaned)){
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
}
i
for (i in 15:length(cleaned)){
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
#dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
}
for (i in 16:length(cleaned)){
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
}
dbSendQuery(con,paste("drop table tablenames;"))
dbWriteTable(con,"tablenames",data.frame(tablenames),row.names=F)
cleaned[[15]][[1]]
taxonList[15,]
i<-15
path<-paste("/home/vsyverson/Github/RLB/size_glacial",taxonList$Folder[i],taxonList$Genus[i],taxonList$Filename[i],sep="/")
sheetNames<-getSheetNames(path)
names(measurements)[i]<-paste(taxonList$Genus[i],taxonList$Species[i],sep="_")
if(length(sheetNames)==1){
measurements[[i]]<-data.frame(read.xlsx(path,sheet=sheetNames))
names(measurements)[i]<-paste(names(measurements)[i],sheetNames,sep="_")
allColNames.ij<-append(allColNames.ij,colnames(measurements[[i]]))
} else {
measurements[[i]]<-vector(mode="list",length(sheetNames))
for (j in 1:length(sheetNames)){
measurements[[i]][[j]]<-data.frame(read.xlsx(path,sheet=sheetNames[j]))
allColNames.ij<-append(allColNames.ij,colnames(measurements[[i]][[j]]))
}
names(measurements[[i]])<-sheetNames
}
#scripts
source("functions.R")
if(length(sheetNames)==1){
measurements[[i]]<-data.frame(read.xlsx(path,sheet=sheetNames))
names(measurements)[i]<-paste(names(measurements)[i],sheetNames,sep="_")
allColNames.ij<-append(allColNames.ij,colnames(measurements[[i]]))
} else {
measurements[[i]]<-vector(mode="list",length(sheetNames))
for (j in 1:length(sheetNames)){
measurements[[i]][[j]]<-data.frame(read.xlsx(path,sheet=sheetNames[j]))
allColNames.ij<-append(allColNames.ij,colnames(measurements[[i]][[j]]))
}
names(measurements[[i]])<-sheetNames
}
measurements[[i]]
measurements[[i]][1]
if(length(sheetNames)==1){
measurements[[i]]<-data.frame(read.xlsx(path,sheet=sheetNames))
names(measurements)[i]<-paste(names(measurements)[i],sheetNames,sep="_")
allColNames.ij<-append(allColNames.ij,colnames(measurements[[i]]))
} else {
measurements[[i]]<-vector(mode="list",length(sheetNames))
for (j in 1:length(sheetNames)){
measurements[[i]][[j]]<-data.frame(read.xlsx(path,sheet=sheetNames[j]))
allColNames.ij<-append(allColNames.ij,colnames(measurements[[i]][[j]]))
}
names(measurements[[i]])<-sheetNames
}
measurements[[15]][[1]]
cleaned[[15]][[1]]<-measurements[[15]][[1]]
names(cleaned[[15]][[1]])
names(cleaned[[15]][[1]])<-c("CatNo","Pit",names(cleaned[[16]][[8]])[3:15])
names(cleaned[[15]][[1]])
i<-15
j<-1
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
PostgreSQL(max.con = 16,fetch.default.rec = 500,force.reload = FALSE)
driver<-dbDriver("PostgreSQL");con<-dbConnect(driver,user="vsyverson",password="gymnogyps",dbname="rlb")
test<-fetch(dbSendQuery(con,"select * from helloworld;"))
test;rm(test)
dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
save(cleaned,file="/home/vsyverson/Github/RLB/size_glacial/2023Paleobio/measurements.RData")
load("~/Github/RLB/size_glacial/2023Paleobio/measurements.RData")
cleaned<-meas
for (i in 1:length(cleaned)){
for (j in 1:length(cleaned[[i]])){
tablename<-tolower(paste0(names(cleaned[i]),"_",names(cleaned[[i]][j])))
tablenames<-append(tablenames,tablename)
tablecols<-data.frame(colnames(cleaned[[i]][[j]]),colnames(cleaned[[i]][[j]]))
for (k in 1:nrow(tablecols)){
tablecols[k,2]<-typeLookup[which(typeLookup[,1]==tablecols[k,1]),2]
}
createquery<-paste(apply(tablecols,1,paste0,collapse=" "),collapse=", ")
dbSendQuery(con,paste("drop table",tablename,collapse=" ;"))
dbSendQuery(con,paste0("create table ",tablename," (",createquery,");",collapse =""))
dbSendQuery(con,paste0("copy ",tablename," from stdin;"))
postgresqlCopyInDataframe(con,cleaned[[i]][[j]])
}
}
